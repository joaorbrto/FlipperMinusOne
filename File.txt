extension CocoaMQTTWebSocket.StarscreamConnection: WebSocketDelegate {
    public func didReceive(_ event: Starscream.WebSocketEvent, client: Starscream.WebSocket) {
        switch event {
        case .connected(_):
            delegate?.connectionOpened(self)
        case .disconnected(_, let code):
            delegate?.connectionClosed(self, withError: nil, withCode: code)
        case .text(let string):
            delegate?.connection(self, receivedString: string)
        case .binary(let data):
            delegate?.connection(self, receivedData: data)
        case .ping(_), .pong(_), .viabilityChanged(_), .reconnectSuggested(_):
            break
        case .cancelled:
            delegate?.connectionClosed(self, withError: nil, withCode: nil)
        case .error(let error):
            delegate?.connectionClosed(self, withError: error, withCode: nil)
        @unknown default:
            break
        }
    }
}